#!/bin/bash

bootnodes=(
  /ip4/100.26.90.187/tcp/9874/p2p/Qmdfjtk6hPoyrH1zVD9PEH4zfWLo38dP2mDvvKXfh3tnEv
  /ip4/54.213.43.194/tcp/9874/p2p/QmZJJx6AdaoEkGLrYG4JeLCKeCKDjnFz2wfHNHxAqFSGA9
  /ip4/13.113.101.219/tcp/12019/p2p/QmQayinFSgMMw5cSpDUiD9pQ2WeP6WNmGxpZ6ou3mdVFJX
  /ip4/99.81.170.167/tcp/12019/p2p/QmRVbTpEYup8dSaURZfF6ByrMTSKa4UyUzJhSjahFzRqNj
)
network_type=mainnet
dns_zone=t.hmny.io
blacklist=./.hmy/blacklist.txt
minpeer=7

unset -v BN_MA bn
for bn in "${bootnodes[@]}"
do
  BN_MA="${BN_MA+"${BN_MA},"}${bn}"
done

. /etc/default/harmonyd

unset -v progname
progname="${0##*/}"
pid=$$
pidfile=/run/$progname/$progname.pid
# output stdout to file
exec 1>> /var/log/$progname/harmony.log
# output stderr to syslog
exec 2> >(logger --id=$pid -t $progname)

if [ ! -d /run/$progname -o ! -w /run/$progname ]; then
   echo "ERROR /run/$progname not a writable directory" >&2
   exit 1
fi

# use filehandle 9 as a locked handle to pidfile
exec 9>$pidfile
flock -n 9 || exit 1
echo $pid 1>&9

unset -f msg err

msg() {
   case $# in
   [1-9]*)
      echo "$*" >&2
      ;;
   esac
}

err() {
   local code
   code="${1}"
   shift 1
   msg "ERROR: $@"
   exit "${code}"
}


# https://www.linuxjournal.com/content/validating-ip-address-bash-script
function valid_ip()
{
    local  ip=$1
    local  stat=1

    if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
        OIFS=$IFS
        IFS='.'
        ip=($ip)
        IFS=$OIFS
        [[ ${ip[0]} -le 255 && ${ip[1]} -le 255 \
            && ${ip[2]} -le 255 && ${ip[3]} -le 255 ]]
        stat=$?
    fi
    return $stat
}

function myip() {
# get ipv4 address only, right now only support ipv4 addresses
   PUB_IP=$(dig -4 @resolver1.opendns.com ANY myip.opendns.com +short)
   if valid_ip $PUB_IP; then
      msg "INFO: public IP address autodetected: $PUB_IP"
   else
      err 1 "NO valid public IP found: $PUB_IP"
   fi
}


NODE_PORT=9000
PUB_IP=

# poorly emulate upstream node.sh
pattern="UTC--*Z--bls_* *.key"
shopt -s nullglob
blsfiles=( $pattern )
shopt -u nullglob
BLSKEYFILE=${blsfiles[0]}
msg "INFO: found ${BLSKEYFILE}"

myip

rm -rf .dht-* # NTL lets be rude

# from upstream
#  args=(
#     -bootnodes "${BN_MA}"
#     -ip "${PUB_IP}"
#     -port "${NODE_PORT}"
#     -blskey_file "${BLSKEYFILE}"
#     -network_type="${network_type}"
#     -dns_zone="${dns_zone}"
#     -blacklist="${blacklist}"
#     -min_peers="${minpeer}"
#  )

LD_LIBRARY_PATH=. exec ./harmony${DEV} $MODE -verbosity $VERBOSITY -bootnodes $BN_MA -ip $PUB_IP -port $NODE_PORT -blskey_file "${BLSKEYFILE}" -blspass file:.passphrase -network_type="${network_type}" -dns_zone="${dns_zone}" -blacklist="${blacklist}" -min_peers="${minpeer}" -log_max_size=100
