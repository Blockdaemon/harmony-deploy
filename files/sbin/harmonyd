#!/bin/bash

. /etc/default/harmonyd

unset -v progname
progname="${0##*/}"
pid=$$
pidfile=/run/$progname/$progname.pid
# output to stderr as well
#exec 1> >(logger --id=$pid -s -t $progname) 2>&1
exec 1> >(logger --id=$pid -t $progname) 2>&1

if [ ! -d /run/$progname -o ! -w /run/$progname ]; then
   echo "/run/$progname not a writable directory" >&2
   exit 1
fi

# use filehandle 9 as a locked handle to pidfile
exec 9>$pidfile
flock -n 9 || exit 1
echo $pid 1>&9

unset -f msg err

msg() {
   case $# in
   [1-9]*)
      echo "${progname}: $*" >&2
      ;;
   esac
}

err() {
   local code
   code="${1}"
   shift 1
   msg "$@"
   exit "${code}"
}


# https://www.linuxjournal.com/content/validating-ip-address-bash-script
function valid_ip()
{
    local  ip=$1
    local  stat=1

    if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
        OIFS=$IFS
        IFS='.'
        ip=($ip)
        IFS=$OIFS
        [[ ${ip[0]} -le 255 && ${ip[1]} -le 255 \
            && ${ip[2]} -le 255 && ${ip[3]} -le 255 ]]
        stat=$?
    fi
    return $stat
}

function myip() {
# get ipv4 address only, right now only support ipv4 addresses
   PUB_IP=$(dig -4 @resolver1.opendns.com ANY myip.opendns.com +short)
   if valid_ip $PUB_IP; then
      msg "public IP address autodetected: $PUB_IP"
   else
      err 1 "NO valid public IP found: $PUB_IP"
   fi
}


NODE_PORT=9000
PUB_IP=

# poorly emulate upstream node.sh
pattern="UTC--*Z--bls_*"
blsfiles=( $pattern )
BLSKEYFILE=${blsfiles[0]}
echo "found ${BLSKEYFILE}" >&2

myip

while [ 1 ]; do
  LD_LIBRARY_PATH=/usr/local/lib/harmony /usr/local/bin/harmony -bootnodes $BN_MA -ip $PUB_IP -port $NODE_PORT -is_genesis -blskey_file "${BLSKEYFILE}" -blspass file:.passphrase
  echo "harmony died, restarting in 30 seconds" >&2
  sleep 30
done
